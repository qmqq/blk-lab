/*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/'use strict';/**
 * Rate interface for creating rate controllers
 */var cov_1hs4dqa2c8=function(){var path='/home/qmq/tool/caliper/src/comm/rate-control/rateInterface.js',hash='a2958974ce907639f2dd6965877f5eb342261a30',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/qmq/tool/caliper/src/comm/rate-control/rateInterface.js',statementMap:{'0':{start:{line:28,column:8},end:{line:28,column:37}},'1':{start:{line:29,column:8},end:{line:29,column:28}},'2':{start:{line:37,column:8},end:{line:37,column:78}},'3':{start:{line:48,column:8},end:{line:48,column:90}},'4':{start:{line:52,column:0},end:{line:52,column:31}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:27,column:4},end:{line:27,column:5}},loc:{start:{line:27,column:34},end:{line:30,column:5}},line:27},'1':{name:'(anonymous_1)',decl:{start:{line:36,column:4},end:{line:36,column:5}},loc:{start:{line:36,column:14},end:{line:38,column:5}},line:36},'2':{name:'(anonymous_2)',decl:{start:{line:47,column:4},end:{line:47,column:5}},loc:{start:{line:47,column:55},end:{line:49,column:5}},line:47}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0},f:{'0':0,'1':0,'2':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();class RateInterface{/**
     * Main consrtuctor
     * @param {Object} blockchain the blockchain under test
     * @param {JSON} opts confituration options
     */constructor(blockchain,opts){cov_1hs4dqa2c8.f[0]++;cov_1hs4dqa2c8.s[0]++;this.blockchain=blockchain;cov_1hs4dqa2c8.s[1]++;this.options=opts;}/**
     * Initialise the rate controller with a passed msg object
     * @param {JSON} msg the JSON initilise message
     */init(msg){cov_1hs4dqa2c8.f[1]++;cov_1hs4dqa2c8.s[2]++;throw new Error('init is not implemented for this blockchain system');}/**
     * Perform the rate control action based on knowledge of the start time, current index, and current results.
     * @param {Number} start the start time
     * @param {Number} idx current transactino index
     * @param {Object[]} results current array of results
     * @param {Array} resultStats, result status set
     */applyRateControl(start,idx,results,resultStats){cov_1hs4dqa2c8.f[2]++;cov_1hs4dqa2c8.s[3]++;throw new Error('applyRateControl is not implemented for this blockchain system');}}cov_1hs4dqa2c8.s[4]++;module.exports=RateInterface;